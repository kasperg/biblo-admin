<?php
/**
 * Review
 *
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DBCDK\CommunityServices\Model;

use \ArrayAccess;
/**
 * Review Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     DBCDK\CommunityServices
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Review implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'pid' => 'string',
        'libraryid' => 'string',
        'worktype' => 'string',
        'content' => 'string',
        'created' => '\DateTime',
        'modified' => '\DateTime',
        'rating' => 'double',
        'id' => 'double',
        'reviewownerid' => 'double'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'pid' => 'pid',
        'libraryid' => 'libraryid',
        'worktype' => 'worktype',
        'content' => 'content',
        'created' => 'created',
        'modified' => 'modified',
        'rating' => 'rating',
        'id' => 'id',
        'reviewownerid' => 'reviewownerid'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'pid' => 'setPid',
        'libraryid' => 'setLibraryid',
        'worktype' => 'setWorktype',
        'content' => 'setContent',
        'created' => 'setCreated',
        'modified' => 'setModified',
        'rating' => 'setRating',
        'id' => 'setId',
        'reviewownerid' => 'setReviewownerid'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'pid' => 'getPid',
        'libraryid' => 'getLibraryid',
        'worktype' => 'getWorktype',
        'content' => 'getContent',
        'created' => 'getCreated',
        'modified' => 'getModified',
        'rating' => 'getRating',
        'id' => 'getId',
        'reviewownerid' => 'getReviewownerid'
    );
  
    
    /**
      * $pid 
      * @var string
      */
    protected $pid;
    
    /**
      * $libraryid 
      * @var string
      */
    protected $libraryid;
    
    /**
      * $worktype 
      * @var string
      */
    protected $worktype;
    
    /**
      * $content 
      * @var string
      */
    protected $content;
    
    /**
      * $created 
      * @var \DateTime
      */
    protected $created;
    
    /**
      * $modified 
      * @var \DateTime
      */
    protected $modified;
    
    /**
      * $rating 
      * @var double
      */
    protected $rating;
    
    /**
      * $id 
      * @var double
      */
    protected $id;
    
    /**
      * $reviewownerid 
      * @var double
      */
    protected $reviewownerid;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->pid = $data["pid"];
            $this->libraryid = $data["libraryid"];
            $this->worktype = $data["worktype"];
            $this->content = $data["content"];
            $this->created = $data["created"];
            $this->modified = $data["modified"];
            $this->rating = $data["rating"];
            $this->id = $data["id"];
            $this->reviewownerid = $data["reviewownerid"];
        }
    }
    
    /**
     * Gets pid
     * @return string
     */
    public function getPid()
    {
        return $this->pid;
    }
  
    /**
     * Sets pid
     * @param string $pid 
     * @return $this
     */
    public function setPid($pid)
    {
        
        $this->pid = $pid;
        return $this;
    }
    
    /**
     * Gets libraryid
     * @return string
     */
    public function getLibraryid()
    {
        return $this->libraryid;
    }
  
    /**
     * Sets libraryid
     * @param string $libraryid 
     * @return $this
     */
    public function setLibraryid($libraryid)
    {
        
        $this->libraryid = $libraryid;
        return $this;
    }
    
    /**
     * Gets worktype
     * @return string
     */
    public function getWorktype()
    {
        return $this->worktype;
    }
  
    /**
     * Sets worktype
     * @param string $worktype 
     * @return $this
     */
    public function setWorktype($worktype)
    {
        
        $this->worktype = $worktype;
        return $this;
    }
    
    /**
     * Gets content
     * @return string
     */
    public function getContent()
    {
        return $this->content;
    }
  
    /**
     * Sets content
     * @param string $content 
     * @return $this
     */
    public function setContent($content)
    {
        
        $this->content = $content;
        return $this;
    }
    
    /**
     * Gets created
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->created;
    }
  
    /**
     * Sets created
     * @param \DateTime $created 
     * @return $this
     */
    public function setCreated($created)
    {
        
        $this->created = $created;
        return $this;
    }
    
    /**
     * Gets modified
     * @return \DateTime
     */
    public function getModified()
    {
        return $this->modified;
    }
  
    /**
     * Sets modified
     * @param \DateTime $modified 
     * @return $this
     */
    public function setModified($modified)
    {
        
        $this->modified = $modified;
        return $this;
    }
    
    /**
     * Gets rating
     * @return double
     */
    public function getRating()
    {
        return $this->rating;
    }
  
    /**
     * Sets rating
     * @param double $rating 
     * @return $this
     */
    public function setRating($rating)
    {
        
        $this->rating = $rating;
        return $this;
    }
    
    /**
     * Gets id
     * @return double
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param double $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets reviewownerid
     * @return double
     */
    public function getReviewownerid()
    {
        return $this->reviewownerid;
    }
  
    /**
     * Sets reviewownerid
     * @param double $reviewownerid 
     * @return $this
     */
    public function setReviewownerid($reviewownerid)
    {
        
        $this->reviewownerid = $reviewownerid;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\DBCDK\CommunityServices\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\DBCDK\CommunityServices\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
