<?php
/**
 * Quarantine
 *
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DBCDK\CommunityServices\Model;

use \ArrayAccess;
/**
 * Quarantine Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     DBCDK\CommunityServices
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Quarantine implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'reason' => 'string',
        'end' => '\DateTime',
        'start' => '\DateTime',
        'id' => 'double',
        'quarantinedProfileId' => 'double',
        'quarantineCreatorProfileId' => 'double'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'reason' => 'reason',
        'end' => 'end',
        'start' => 'start',
        'id' => 'id',
        'quarantinedProfileId' => 'quarantinedProfileId',
        'quarantineCreatorProfileId' => 'quarantineCreatorProfileId'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'reason' => 'setReason',
        'end' => 'setEnd',
        'start' => 'setStart',
        'id' => 'setId',
        'quarantinedProfileId' => 'setQuarantinedProfileId',
        'quarantineCreatorProfileId' => 'setQuarantineCreatorProfileId'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'reason' => 'getReason',
        'end' => 'getEnd',
        'start' => 'getStart',
        'id' => 'getId',
        'quarantinedProfileId' => 'getQuarantinedProfileId',
        'quarantineCreatorProfileId' => 'getQuarantineCreatorProfileId'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $reason 
      * @var string
      */
    protected $reason;
    
    /**
      * $end 
      * @var \DateTime
      */
    protected $end;
    
    /**
      * $start 
      * @var \DateTime
      */
    protected $start;
    
    /**
      * $id 
      * @var double
      */
    protected $id;
    
    /**
      * $quarantinedProfileId 
      * @var double
      */
    protected $quarantinedProfileId;
    
    /**
      * $quarantineCreatorProfileId 
      * @var double
      */
    protected $quarantineCreatorProfileId;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->reason = $data["reason"];
            $this->end = $data["end"];
            $this->start = $data["start"];
            $this->id = $data["id"];
            $this->quarantinedProfileId = $data["quarantinedProfileId"];
            $this->quarantineCreatorProfileId = $data["quarantineCreatorProfileId"];
        }
    }
    
    /**
     * Gets reason
     * @return string
     */
    public function getReason()
    {
        return $this->reason;
    }
  
    /**
     * Sets reason
     * @param string $reason 
     * @return $this
     */
    public function setReason($reason)
    {
        
        $this->reason = $reason;
        return $this;
    }
    
    /**
     * Gets end
     * @return \DateTime
     */
    public function getEnd()
    {
        return $this->end;
    }
  
    /**
     * Sets end
     * @param \DateTime $end 
     * @return $this
     */
    public function setEnd($end)
    {
        
        $this->end = $end;
        return $this;
    }
    
    /**
     * Gets start
     * @return \DateTime
     */
    public function getStart()
    {
        return $this->start;
    }
  
    /**
     * Sets start
     * @param \DateTime $start 
     * @return $this
     */
    public function setStart($start)
    {
        
        $this->start = $start;
        return $this;
    }
    
    /**
     * Gets id
     * @return double
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param double $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets quarantinedProfileId
     * @return double
     */
    public function getQuarantinedProfileId()
    {
        return $this->quarantinedProfileId;
    }
  
    /**
     * Sets quarantinedProfileId
     * @param double $quarantinedProfileId 
     * @return $this
     */
    public function setQuarantinedProfileId($quarantinedProfileId)
    {
        
        $this->quarantinedProfileId = $quarantinedProfileId;
        return $this;
    }
    
    /**
     * Gets quarantineCreatorProfileId
     * @return double
     */
    public function getQuarantineCreatorProfileId()
    {
        return $this->quarantineCreatorProfileId;
    }
  
    /**
     * Sets quarantineCreatorProfileId
     * @param double $quarantineCreatorProfileId 
     * @return $this
     */
    public function setQuarantineCreatorProfileId($quarantineCreatorProfileId)
    {
        
        $this->quarantineCreatorProfileId = $quarantineCreatorProfileId;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\DBCDK\CommunityServices\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\DBCDK\CommunityServices\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
