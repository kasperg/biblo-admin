<?php
/**
 * GroupApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * GroupApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GroupApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for groupCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_groupCount() {

    }
    
    /**
     * Test case for groupCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_groupCreate() {

    }
    
    /**
     * Test case for groupCreateChangeStreamGetGroupsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_groupCreateChangeStreamGetGroupsChangeStream() {

    }
    
    /**
     * Test case for groupCreateChangeStreamPostGroupsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_groupCreateChangeStreamPostGroupsChangeStream() {

    }
    
    /**
     * Test case for groupDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_groupDeleteById() {

    }
    
    /**
     * Test case for groupExistsGetGroupsidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_groupExistsGetGroupsidExists() {

    }
    
    /**
     * Test case for groupExistsHeadGroupsid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_groupExistsHeadGroupsid() {

    }
    
    /**
     * Test case for groupFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_groupFind() {

    }
    
    /**
     * Test case for groupFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_groupFindById() {

    }
    
    /**
     * Test case for groupFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_groupFindOne() {

    }
    
    /**
     * Test case for groupPrototypeCountFlags
     *
     * Counts flags of Group.
     *
     */
    public function test_groupPrototypeCountFlags() {

    }
    
    /**
     * Test case for groupPrototypeCountMembers
     *
     * Counts members of Group.
     *
     */
    public function test_groupPrototypeCountMembers() {

    }
    
    /**
     * Test case for groupPrototypeCountPosts
     *
     * Counts posts of Group.
     *
     */
    public function test_groupPrototypeCountPosts() {

    }
    
    /**
     * Test case for groupPrototypeCreateCoverImage
     *
     * Creates a new instance in coverImage of this model.
     *
     */
    public function test_groupPrototypeCreateCoverImage() {

    }
    
    /**
     * Test case for groupPrototypeCreateFlags
     *
     * Creates a new instance in flags of this model.
     *
     */
    public function test_groupPrototypeCreateFlags() {

    }
    
    /**
     * Test case for groupPrototypeCreateMembers
     *
     * Creates a new instance in members of this model.
     *
     */
    public function test_groupPrototypeCreateMembers() {

    }
    
    /**
     * Test case for groupPrototypeCreatePosts
     *
     * Creates a new instance in posts of this model.
     *
     */
    public function test_groupPrototypeCreatePosts() {

    }
    
    /**
     * Test case for groupPrototypeDeleteFlags
     *
     * Deletes all flags of this model.
     *
     */
    public function test_groupPrototypeDeleteFlags() {

    }
    
    /**
     * Test case for groupPrototypeDeleteMembers
     *
     * Deletes all members of this model.
     *
     */
    public function test_groupPrototypeDeleteMembers() {

    }
    
    /**
     * Test case for groupPrototypeDeletePosts
     *
     * Deletes all posts of this model.
     *
     */
    public function test_groupPrototypeDeletePosts() {

    }
    
    /**
     * Test case for groupPrototypeDestroyByIdFlags
     *
     * Delete a related item by id for flags.
     *
     */
    public function test_groupPrototypeDestroyByIdFlags() {

    }
    
    /**
     * Test case for groupPrototypeDestroyByIdMembers
     *
     * Delete a related item by id for members.
     *
     */
    public function test_groupPrototypeDestroyByIdMembers() {

    }
    
    /**
     * Test case for groupPrototypeDestroyByIdPosts
     *
     * Delete a related item by id for posts.
     *
     */
    public function test_groupPrototypeDestroyByIdPosts() {

    }
    
    /**
     * Test case for groupPrototypeDestroyCoverImage
     *
     * Deletes coverImage of this model.
     *
     */
    public function test_groupPrototypeDestroyCoverImage() {

    }
    
    /**
     * Test case for groupPrototypeExistsMembers
     *
     * Check the existence of members relation to an item by id.
     *
     */
    public function test_groupPrototypeExistsMembers() {

    }
    
    /**
     * Test case for groupPrototypeFindByIdFlags
     *
     * Find a related item by id for flags.
     *
     */
    public function test_groupPrototypeFindByIdFlags() {

    }
    
    /**
     * Test case for groupPrototypeFindByIdMembers
     *
     * Find a related item by id for members.
     *
     */
    public function test_groupPrototypeFindByIdMembers() {

    }
    
    /**
     * Test case for groupPrototypeFindByIdPosts
     *
     * Find a related item by id for posts.
     *
     */
    public function test_groupPrototypeFindByIdPosts() {

    }
    
    /**
     * Test case for groupPrototypeGetCoverImage
     *
     * Fetches hasOne relation coverImage.
     *
     */
    public function test_groupPrototypeGetCoverImage() {

    }
    
    /**
     * Test case for groupPrototypeGetFlags
     *
     * Queries flags of Group.
     *
     */
    public function test_groupPrototypeGetFlags() {

    }
    
    /**
     * Test case for groupPrototypeGetMembers
     *
     * Queries members of Group.
     *
     */
    public function test_groupPrototypeGetMembers() {

    }
    
    /**
     * Test case for groupPrototypeGetOwner
     *
     * Fetches belongsTo relation owner.
     *
     */
    public function test_groupPrototypeGetOwner() {

    }
    
    /**
     * Test case for groupPrototypeGetPosts
     *
     * Queries posts of Group.
     *
     */
    public function test_groupPrototypeGetPosts() {

    }
    
    /**
     * Test case for groupPrototypeLinkMembers
     *
     * Add a related item by id for members.
     *
     */
    public function test_groupPrototypeLinkMembers() {

    }
    
    /**
     * Test case for groupPrototypeUnlinkMembers
     *
     * Remove the members relation to an item by id.
     *
     */
    public function test_groupPrototypeUnlinkMembers() {

    }
    
    /**
     * Test case for groupPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_groupPrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for groupPrototypeUpdateByIdFlags
     *
     * Update a related item by id for flags.
     *
     */
    public function test_groupPrototypeUpdateByIdFlags() {

    }
    
    /**
     * Test case for groupPrototypeUpdateByIdMembers
     *
     * Update a related item by id for members.
     *
     */
    public function test_groupPrototypeUpdateByIdMembers() {

    }
    
    /**
     * Test case for groupPrototypeUpdateByIdPosts
     *
     * Update a related item by id for posts.
     *
     */
    public function test_groupPrototypeUpdateByIdPosts() {

    }
    
    /**
     * Test case for groupPrototypeUpdateCoverImage
     *
     * Update coverImage of this model.
     *
     */
    public function test_groupPrototypeUpdateCoverImage() {

    }
    
    /**
     * Test case for groupUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_groupUpdateAll() {

    }
    
    /**
     * Test case for groupUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_groupUpsert() {

    }
    
}
