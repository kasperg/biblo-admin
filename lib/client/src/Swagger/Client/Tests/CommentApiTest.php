<?php
/**
 * CommentApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * CommentApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CommentApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for commentCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_commentCount() {

    }
    
    /**
     * Test case for commentCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_commentCreate() {

    }
    
    /**
     * Test case for commentCreateChangeStreamGetCommentsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_commentCreateChangeStreamGetCommentsChangeStream() {

    }
    
    /**
     * Test case for commentCreateChangeStreamPostCommentsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_commentCreateChangeStreamPostCommentsChangeStream() {

    }
    
    /**
     * Test case for commentDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_commentDeleteById() {

    }
    
    /**
     * Test case for commentExistsGetCommentsidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_commentExistsGetCommentsidExists() {

    }
    
    /**
     * Test case for commentExistsHeadCommentsid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_commentExistsHeadCommentsid() {

    }
    
    /**
     * Test case for commentFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_commentFind() {

    }
    
    /**
     * Test case for commentFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_commentFindById() {

    }
    
    /**
     * Test case for commentFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_commentFindOne() {

    }
    
    /**
     * Test case for commentPrototypeCountFlags
     *
     * Counts flags of Comment.
     *
     */
    public function test_commentPrototypeCountFlags() {

    }
    
    /**
     * Test case for commentPrototypeCreateFlags
     *
     * Creates a new instance in flags of this model.
     *
     */
    public function test_commentPrototypeCreateFlags() {

    }
    
    /**
     * Test case for commentPrototypeCreateImage
     *
     * Creates a new instance in image of this model.
     *
     */
    public function test_commentPrototypeCreateImage() {

    }
    
    /**
     * Test case for commentPrototypeDeleteFlags
     *
     * Deletes all flags of this model.
     *
     */
    public function test_commentPrototypeDeleteFlags() {

    }
    
    /**
     * Test case for commentPrototypeDestroyByIdFlags
     *
     * Delete a related item by id for flags.
     *
     */
    public function test_commentPrototypeDestroyByIdFlags() {

    }
    
    /**
     * Test case for commentPrototypeDestroyImage
     *
     * Deletes image of this model.
     *
     */
    public function test_commentPrototypeDestroyImage() {

    }
    
    /**
     * Test case for commentPrototypeFindByIdFlags
     *
     * Find a related item by id for flags.
     *
     */
    public function test_commentPrototypeFindByIdFlags() {

    }
    
    /**
     * Test case for commentPrototypeGetFlags
     *
     * Queries flags of Comment.
     *
     */
    public function test_commentPrototypeGetFlags() {

    }
    
    /**
     * Test case for commentPrototypeGetImage
     *
     * Fetches hasOne relation image.
     *
     */
    public function test_commentPrototypeGetImage() {

    }
    
    /**
     * Test case for commentPrototypeGetOwner
     *
     * Fetches belongsTo relation owner.
     *
     */
    public function test_commentPrototypeGetOwner() {

    }
    
    /**
     * Test case for commentPrototypeGetPost
     *
     * Fetches belongsTo relation post.
     *
     */
    public function test_commentPrototypeGetPost() {

    }
    
    /**
     * Test case for commentPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_commentPrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for commentPrototypeUpdateByIdFlags
     *
     * Update a related item by id for flags.
     *
     */
    public function test_commentPrototypeUpdateByIdFlags() {

    }
    
    /**
     * Test case for commentPrototypeUpdateImage
     *
     * Update image of this model.
     *
     */
    public function test_commentPrototypeUpdateImage() {

    }
    
    /**
     * Test case for commentUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_commentUpdateAll() {

    }
    
    /**
     * Test case for commentUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_commentUpsert() {

    }
    
}
