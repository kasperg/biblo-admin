<?php
/**
 * LikeApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * LikeApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LikeApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for likeCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_likeCount() {

    }
    
    /**
     * Test case for likeCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_likeCreate() {

    }
    
    /**
     * Test case for likeCreateChangeStreamGetLikesChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_likeCreateChangeStreamGetLikesChangeStream() {

    }
    
    /**
     * Test case for likeCreateChangeStreamPostLikesChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_likeCreateChangeStreamPostLikesChangeStream() {

    }
    
    /**
     * Test case for likeDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_likeDeleteById() {

    }
    
    /**
     * Test case for likeExistsGetLikesidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_likeExistsGetLikesidExists() {

    }
    
    /**
     * Test case for likeExistsHeadLikesid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_likeExistsHeadLikesid() {

    }
    
    /**
     * Test case for likeFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_likeFind() {

    }
    
    /**
     * Test case for likeFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_likeFindById() {

    }
    
    /**
     * Test case for likeFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_likeFindOne() {

    }
    
    /**
     * Test case for likePrototypeGetPost
     *
     * Fetches belongsTo relation post.
     *
     */
    public function test_likePrototypeGetPost() {

    }
    
    /**
     * Test case for likePrototypeGetReview
     *
     * Fetches belongsTo relation review.
     *
     */
    public function test_likePrototypeGetReview() {

    }
    
    /**
     * Test case for likePrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_likePrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for likeUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_likeUpdateAll() {

    }
    
    /**
     * Test case for likeUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_likeUpsert() {

    }
    
}
