<?php
/**
 * PostApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * PostApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PostApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for postCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_postCount() {

    }
    
    /**
     * Test case for postCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_postCreate() {

    }
    
    /**
     * Test case for postCreateChangeStreamGetPostsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_postCreateChangeStreamGetPostsChangeStream() {

    }
    
    /**
     * Test case for postCreateChangeStreamPostPostsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_postCreateChangeStreamPostPostsChangeStream() {

    }
    
    /**
     * Test case for postDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_postDeleteById() {

    }
    
    /**
     * Test case for postExistsGetPostsidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_postExistsGetPostsidExists() {

    }
    
    /**
     * Test case for postExistsHeadPostsid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_postExistsHeadPostsid() {

    }
    
    /**
     * Test case for postFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_postFind() {

    }
    
    /**
     * Test case for postFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_postFindById() {

    }
    
    /**
     * Test case for postFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_postFindOne() {

    }
    
    /**
     * Test case for postPrototypeCountComments
     *
     * Counts comments of Post.
     *
     */
    public function test_postPrototypeCountComments() {

    }
    
    /**
     * Test case for postPrototypeCountFlags
     *
     * Counts flags of Post.
     *
     */
    public function test_postPrototypeCountFlags() {

    }
    
    /**
     * Test case for postPrototypeCountLikes
     *
     * Counts likes of Post.
     *
     */
    public function test_postPrototypeCountLikes() {

    }
    
    /**
     * Test case for postPrototypeCreateComments
     *
     * Creates a new instance in comments of this model.
     *
     */
    public function test_postPrototypeCreateComments() {

    }
    
    /**
     * Test case for postPrototypeCreateFlags
     *
     * Creates a new instance in flags of this model.
     *
     */
    public function test_postPrototypeCreateFlags() {

    }
    
    /**
     * Test case for postPrototypeCreateImage
     *
     * Creates a new instance in image of this model.
     *
     */
    public function test_postPrototypeCreateImage() {

    }
    
    /**
     * Test case for postPrototypeCreateLikes
     *
     * Creates a new instance in likes of this model.
     *
     */
    public function test_postPrototypeCreateLikes() {

    }
    
    /**
     * Test case for postPrototypeCreateVideo
     *
     * Creates a new instance in video of this model.
     *
     */
    public function test_postPrototypeCreateVideo() {

    }
    
    /**
     * Test case for postPrototypeDeleteComments
     *
     * Deletes all comments of this model.
     *
     */
    public function test_postPrototypeDeleteComments() {

    }
    
    /**
     * Test case for postPrototypeDeleteFlags
     *
     * Deletes all flags of this model.
     *
     */
    public function test_postPrototypeDeleteFlags() {

    }
    
    /**
     * Test case for postPrototypeDeleteLikes
     *
     * Deletes all likes of this model.
     *
     */
    public function test_postPrototypeDeleteLikes() {

    }
    
    /**
     * Test case for postPrototypeDestroyByIdComments
     *
     * Delete a related item by id for comments.
     *
     */
    public function test_postPrototypeDestroyByIdComments() {

    }
    
    /**
     * Test case for postPrototypeDestroyByIdFlags
     *
     * Delete a related item by id for flags.
     *
     */
    public function test_postPrototypeDestroyByIdFlags() {

    }
    
    /**
     * Test case for postPrototypeDestroyByIdLikes
     *
     * Delete a related item by id for likes.
     *
     */
    public function test_postPrototypeDestroyByIdLikes() {

    }
    
    /**
     * Test case for postPrototypeDestroyImage
     *
     * Deletes image of this model.
     *
     */
    public function test_postPrototypeDestroyImage() {

    }
    
    /**
     * Test case for postPrototypeDestroyVideo
     *
     * Deletes video of this model.
     *
     */
    public function test_postPrototypeDestroyVideo() {

    }
    
    /**
     * Test case for postPrototypeExistsLikes
     *
     * Check the existence of likes relation to an item by id.
     *
     */
    public function test_postPrototypeExistsLikes() {

    }
    
    /**
     * Test case for postPrototypeFindByIdComments
     *
     * Find a related item by id for comments.
     *
     */
    public function test_postPrototypeFindByIdComments() {

    }
    
    /**
     * Test case for postPrototypeFindByIdFlags
     *
     * Find a related item by id for flags.
     *
     */
    public function test_postPrototypeFindByIdFlags() {

    }
    
    /**
     * Test case for postPrototypeFindByIdLikes
     *
     * Find a related item by id for likes.
     *
     */
    public function test_postPrototypeFindByIdLikes() {

    }
    
    /**
     * Test case for postPrototypeGetComments
     *
     * Queries comments of Post.
     *
     */
    public function test_postPrototypeGetComments() {

    }
    
    /**
     * Test case for postPrototypeGetFlags
     *
     * Queries flags of Post.
     *
     */
    public function test_postPrototypeGetFlags() {

    }
    
    /**
     * Test case for postPrototypeGetGroup
     *
     * Fetches belongsTo relation group.
     *
     */
    public function test_postPrototypeGetGroup() {

    }
    
    /**
     * Test case for postPrototypeGetImage
     *
     * Fetches hasOne relation image.
     *
     */
    public function test_postPrototypeGetImage() {

    }
    
    /**
     * Test case for postPrototypeGetLikes
     *
     * Queries likes of Post.
     *
     */
    public function test_postPrototypeGetLikes() {

    }
    
    /**
     * Test case for postPrototypeGetOwner
     *
     * Fetches belongsTo relation owner.
     *
     */
    public function test_postPrototypeGetOwner() {

    }
    
    /**
     * Test case for postPrototypeGetVideo
     *
     * Fetches hasOne relation video.
     *
     */
    public function test_postPrototypeGetVideo() {

    }
    
    /**
     * Test case for postPrototypeLinkLikes
     *
     * Add a related item by id for likes.
     *
     */
    public function test_postPrototypeLinkLikes() {

    }
    
    /**
     * Test case for postPrototypeUnlinkLikes
     *
     * Remove the likes relation to an item by id.
     *
     */
    public function test_postPrototypeUnlinkLikes() {

    }
    
    /**
     * Test case for postPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_postPrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for postPrototypeUpdateByIdComments
     *
     * Update a related item by id for comments.
     *
     */
    public function test_postPrototypeUpdateByIdComments() {

    }
    
    /**
     * Test case for postPrototypeUpdateByIdFlags
     *
     * Update a related item by id for flags.
     *
     */
    public function test_postPrototypeUpdateByIdFlags() {

    }
    
    /**
     * Test case for postPrototypeUpdateByIdLikes
     *
     * Update a related item by id for likes.
     *
     */
    public function test_postPrototypeUpdateByIdLikes() {

    }
    
    /**
     * Test case for postPrototypeUpdateImage
     *
     * Update image of this model.
     *
     */
    public function test_postPrototypeUpdateImage() {

    }
    
    /**
     * Test case for postPrototypeUpdateVideo
     *
     * Update video of this model.
     *
     */
    public function test_postPrototypeUpdateVideo() {

    }
    
    /**
     * Test case for postUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_postUpdateAll() {

    }
    
    /**
     * Test case for postUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_postUpsert() {

    }
    
}
