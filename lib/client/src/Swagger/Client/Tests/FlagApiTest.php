<?php
/**
 * FlagApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * FlagApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FlagApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for flagCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_flagCount() {

    }
    
    /**
     * Test case for flagCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_flagCreate() {

    }
    
    /**
     * Test case for flagCreateChangeStreamGetFlagsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_flagCreateChangeStreamGetFlagsChangeStream() {

    }
    
    /**
     * Test case for flagCreateChangeStreamPostFlagsChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_flagCreateChangeStreamPostFlagsChangeStream() {

    }
    
    /**
     * Test case for flagDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_flagDeleteById() {

    }
    
    /**
     * Test case for flagExistsGetFlagsidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_flagExistsGetFlagsidExists() {

    }
    
    /**
     * Test case for flagExistsHeadFlagsid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_flagExistsHeadFlagsid() {

    }
    
    /**
     * Test case for flagFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_flagFind() {

    }
    
    /**
     * Test case for flagFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_flagFindById() {

    }
    
    /**
     * Test case for flagFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_flagFindOne() {

    }
    
    /**
     * Test case for flagPrototypeCreateComments
     *
     * Creates a new instance in comments of this model.
     *
     */
    public function test_flagPrototypeCreateComments() {

    }
    
    /**
     * Test case for flagPrototypeCreateGroups
     *
     * Creates a new instance in groups of this model.
     *
     */
    public function test_flagPrototypeCreateGroups() {

    }
    
    /**
     * Test case for flagPrototypeCreatePosts
     *
     * Creates a new instance in posts of this model.
     *
     */
    public function test_flagPrototypeCreatePosts() {

    }
    
    /**
     * Test case for flagPrototypeCreateReviews
     *
     * Creates a new instance in reviews of this model.
     *
     */
    public function test_flagPrototypeCreateReviews() {

    }
    
    /**
     * Test case for flagPrototypeDestroyComments
     *
     * Deletes comments of this model.
     *
     */
    public function test_flagPrototypeDestroyComments() {

    }
    
    /**
     * Test case for flagPrototypeDestroyGroups
     *
     * Deletes groups of this model.
     *
     */
    public function test_flagPrototypeDestroyGroups() {

    }
    
    /**
     * Test case for flagPrototypeDestroyPosts
     *
     * Deletes posts of this model.
     *
     */
    public function test_flagPrototypeDestroyPosts() {

    }
    
    /**
     * Test case for flagPrototypeDestroyReviews
     *
     * Deletes reviews of this model.
     *
     */
    public function test_flagPrototypeDestroyReviews() {

    }
    
    /**
     * Test case for flagPrototypeGetComments
     *
     * Fetches hasOne relation comments.
     *
     */
    public function test_flagPrototypeGetComments() {

    }
    
    /**
     * Test case for flagPrototypeGetGroups
     *
     * Fetches hasOne relation groups.
     *
     */
    public function test_flagPrototypeGetGroups() {

    }
    
    /**
     * Test case for flagPrototypeGetOwner
     *
     * Fetches belongsTo relation owner.
     *
     */
    public function test_flagPrototypeGetOwner() {

    }
    
    /**
     * Test case for flagPrototypeGetPosts
     *
     * Fetches hasOne relation posts.
     *
     */
    public function test_flagPrototypeGetPosts() {

    }
    
    /**
     * Test case for flagPrototypeGetReviews
     *
     * Fetches hasOne relation reviews.
     *
     */
    public function test_flagPrototypeGetReviews() {

    }
    
    /**
     * Test case for flagPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_flagPrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for flagPrototypeUpdateComments
     *
     * Update comments of this model.
     *
     */
    public function test_flagPrototypeUpdateComments() {

    }
    
    /**
     * Test case for flagPrototypeUpdateGroups
     *
     * Update groups of this model.
     *
     */
    public function test_flagPrototypeUpdateGroups() {

    }
    
    /**
     * Test case for flagPrototypeUpdatePosts
     *
     * Update posts of this model.
     *
     */
    public function test_flagPrototypeUpdatePosts() {

    }
    
    /**
     * Test case for flagPrototypeUpdateReviews
     *
     * Update reviews of this model.
     *
     */
    public function test_flagPrototypeUpdateReviews() {

    }
    
    /**
     * Test case for flagUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_flagUpdateAll() {

    }
    
    /**
     * Test case for flagUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_flagUpsert() {

    }
    
}
