<?php
/**
 * FileApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * FileApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FileApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for fileCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_fileCount() {

    }
    
    /**
     * Test case for fileCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_fileCreate() {

    }
    
    /**
     * Test case for fileCreateChangeStreamGetFilesChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_fileCreateChangeStreamGetFilesChangeStream() {

    }
    
    /**
     * Test case for fileCreateChangeStreamPostFilesChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_fileCreateChangeStreamPostFilesChangeStream() {

    }
    
    /**
     * Test case for fileDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_fileDeleteById() {

    }
    
    /**
     * Test case for fileExistsGetFilesidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_fileExistsGetFilesidExists() {

    }
    
    /**
     * Test case for fileExistsHeadFilesid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_fileExistsHeadFilesid() {

    }
    
    /**
     * Test case for fileFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_fileFind() {

    }
    
    /**
     * Test case for fileFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_fileFindById() {

    }
    
    /**
     * Test case for fileFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_fileFindOne() {

    }
    
    /**
     * Test case for filePrototypeCountResolutions
     *
     * Counts resolutions of file.
     *
     */
    public function test_filePrototypeCountResolutions() {

    }
    
    /**
     * Test case for filePrototypeCreateResolutions
     *
     * Creates a new instance in resolutions of this model.
     *
     */
    public function test_filePrototypeCreateResolutions() {

    }
    
    /**
     * Test case for filePrototypeDeleteResolutions
     *
     * Deletes all resolutions of this model.
     *
     */
    public function test_filePrototypeDeleteResolutions() {

    }
    
    /**
     * Test case for filePrototypeDestroyByIdResolutions
     *
     * Delete a related item by id for resolutions.
     *
     */
    public function test_filePrototypeDestroyByIdResolutions() {

    }
    
    /**
     * Test case for filePrototypeExistsResolutions
     *
     * Check the existence of resolutions relation to an item by id.
     *
     */
    public function test_filePrototypeExistsResolutions() {

    }
    
    /**
     * Test case for filePrototypeFindByIdResolutions
     *
     * Find a related item by id for resolutions.
     *
     */
    public function test_filePrototypeFindByIdResolutions() {

    }
    
    /**
     * Test case for filePrototypeGetResolutions
     *
     * Queries resolutions of file.
     *
     */
    public function test_filePrototypeGetResolutions() {

    }
    
    /**
     * Test case for filePrototypeLinkResolutions
     *
     * Add a related item by id for resolutions.
     *
     */
    public function test_filePrototypeLinkResolutions() {

    }
    
    /**
     * Test case for filePrototypeUnlinkResolutions
     *
     * Remove the resolutions relation to an item by id.
     *
     */
    public function test_filePrototypeUnlinkResolutions() {

    }
    
    /**
     * Test case for filePrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_filePrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for filePrototypeUpdateByIdResolutions
     *
     * Update a related item by id for resolutions.
     *
     */
    public function test_filePrototypeUpdateByIdResolutions() {

    }
    
    /**
     * Test case for fileUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_fileUpdateAll() {

    }
    
    /**
     * Test case for fileUpload
     *
     * Uploads a file
     *
     */
    public function test_fileUpload() {

    }
    
    /**
     * Test case for fileUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_fileUpsert() {

    }
    
}
