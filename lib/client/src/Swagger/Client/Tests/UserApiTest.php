<?php
/**
 * UserApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Please update the test case below to test the endpoint.
 */

namespace DBCDK\CommunityServices\Api;

use \DBCDK\CommunityServices\Configuration;
use \DBCDK\CommunityServices\ApiClient;
use \DBCDK\CommunityServices\ApiException;
use \DBCDK\CommunityServices\ObjectSerializer;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  DBCDK\CommunityServices
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running each test case
     */
    public static function setUpBeforeClass() {

    }

    /**
     * Clean up after running each test case
     */
    public static function tearDownAfterClass() {

    }

    
    /**
     * Test case for userConfirm
     *
     * Confirm a user registration with email verification token.
     *
     */
    public function test_userConfirm() {

    }
    
    /**
     * Test case for userCount
     *
     * Count instances of the model matched by where from the data source.
     *
     */
    public function test_userCount() {

    }
    
    /**
     * Test case for userCreate
     *
     * Create a new instance of the model and persist it into the data source.
     *
     */
    public function test_userCreate() {

    }
    
    /**
     * Test case for userCreateChangeStreamGetUsersChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_userCreateChangeStreamGetUsersChangeStream() {

    }
    
    /**
     * Test case for userCreateChangeStreamPostUsersChangeStream
     *
     * Create a change stream.
     *
     */
    public function test_userCreateChangeStreamPostUsersChangeStream() {

    }
    
    /**
     * Test case for userDeleteById
     *
     * Delete a model instance by id from the data source.
     *
     */
    public function test_userDeleteById() {

    }
    
    /**
     * Test case for userExistsGetUsersidExists
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_userExistsGetUsersidExists() {

    }
    
    /**
     * Test case for userExistsHeadUsersid
     *
     * Check whether a model instance exists in the data source.
     *
     */
    public function test_userExistsHeadUsersid() {

    }
    
    /**
     * Test case for userFind
     *
     * Find all instances of the model matched by filter from the data source.
     *
     */
    public function test_userFind() {

    }
    
    /**
     * Test case for userFindById
     *
     * Find a model instance by id from the data source.
     *
     */
    public function test_userFindById() {

    }
    
    /**
     * Test case for userFindOne
     *
     * Find first instance of the model matched by filter from the data source.
     *
     */
    public function test_userFindOne() {

    }
    
    /**
     * Test case for userLogin
     *
     * Login a user with username/email and password.
     *
     */
    public function test_userLogin() {

    }
    
    /**
     * Test case for userLogout
     *
     * Logout a user with access token.
     *
     */
    public function test_userLogout() {

    }
    
    /**
     * Test case for userPrototypeCountAccessTokens
     *
     * Counts accessTokens of User.
     *
     */
    public function test_userPrototypeCountAccessTokens() {

    }
    
    /**
     * Test case for userPrototypeCreateAccessTokens
     *
     * Creates a new instance in accessTokens of this model.
     *
     */
    public function test_userPrototypeCreateAccessTokens() {

    }
    
    /**
     * Test case for userPrototypeDeleteAccessTokens
     *
     * Deletes all accessTokens of this model.
     *
     */
    public function test_userPrototypeDeleteAccessTokens() {

    }
    
    /**
     * Test case for userPrototypeDestroyByIdAccessTokens
     *
     * Delete a related item by id for accessTokens.
     *
     */
    public function test_userPrototypeDestroyByIdAccessTokens() {

    }
    
    /**
     * Test case for userPrototypeFindByIdAccessTokens
     *
     * Find a related item by id for accessTokens.
     *
     */
    public function test_userPrototypeFindByIdAccessTokens() {

    }
    
    /**
     * Test case for userPrototypeGetAccessTokens
     *
     * Queries accessTokens of User.
     *
     */
    public function test_userPrototypeGetAccessTokens() {

    }
    
    /**
     * Test case for userPrototypeUpdateAttributes
     *
     * Update attributes for a model instance and persist it into the data source.
     *
     */
    public function test_userPrototypeUpdateAttributes() {

    }
    
    /**
     * Test case for userPrototypeUpdateByIdAccessTokens
     *
     * Update a related item by id for accessTokens.
     *
     */
    public function test_userPrototypeUpdateByIdAccessTokens() {

    }
    
    /**
     * Test case for userResetPassword
     *
     * Reset password for a user with email.
     *
     */
    public function test_userResetPassword() {

    }
    
    /**
     * Test case for userUpdateAll
     *
     * Update instances of the model matched by where from the data source.
     *
     */
    public function test_userUpdateAll() {

    }
    
    /**
     * Test case for userUpsert
     *
     * Update an existing model instance or insert a new one into the data source.
     *
     */
    public function test_userUpsert() {

    }
    
}
